server:
  port: ${PORT:80}
spring:
  application:
    name: "MsFundRequest"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
  sql:
    init:
      mode: "always"
  r2dbc:
    schema:
      create-mode: "always"
      locations: "classpath:schema.sql"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION}

routes:
  paths:
    funds: "/api/v1/solicitud"
    fundsById: "/api/v1/solicitud/{id}"
    fundsPageable:  "/api/v1/solicitud"

adapters:
  r2dbc:
    host: ${SPRING_DATASOURCE_HOST}
    port: 5432
    database: ${SPRING_DATASOURCE_DATABASE}
    schema: "public"
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

adapter:
  restconsumer:
    timeout: 5000
    retry: 2
    user:
      host: "http://localhost:8080"
      url: "/api/v1/usuario/"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
